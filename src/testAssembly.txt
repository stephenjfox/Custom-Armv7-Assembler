#MOVW R4, 0 # "Zero out" one of the register we want to use
#MOVT R4, 0x3F20 # Add the "array pointer" into the register
#ADD R2, R4, 0x10 # Add 0x10 to R4 value and store in R2
LDR R3, R2 # Writes what R2 points to R3
#ORR R3, R3, 0x200000 #
#STR R3, R2 # immediate ARM
#MOVW R2, 0x8000 # page A8-484 Encoding A2
#ADD R3, R4, 0x20
#ADD R5, R4, 0x2C # Setting the memory register to look at
#STR R2, R3 # Light the LED
#MOVT R6, 0x0005 # 11.25.15:19_51 saw that "0x0001" was too short
#SUB R6, R6, 0x1 # subtract 1 from a big number in register 6
#BNE 0xFFFFFD # Branch conditionally back -3 # to the preceding function
#STR R2, R5 # Dim the LED
#MOVT R6, 0x0005 # 11.25.15:19_51 saw that "0x0001" was too short
#SUB R6, R6, 0x1 # subtract 1 from a big number in register 6
#BNE 0xFFFFFD # Branch conditionally back -3 # to the preceding function
#B 0xFFFFF6 # Branch always -2 # works, so no change
